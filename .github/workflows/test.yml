# Sdfhv
name: Docker Build and Push

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
     matrix:
      node-version: ['16.x']
        
    steps:
    
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install Dependencies
        run: npm install

      - name: Build Docker Image
        run: docker build -t shivang1012/node-hello .

      - name: Extract Docker credentials from secret
        id: extract-credentials
        run: |
          USERNAME=$(echo "$DOCKER_JSON_SECRET" | jq -r '.username')
          PASSWORD=$(echo "$DOCKER_JSON_SECRET" | jq -r '.password')
          echo "::set-output name=username::$USERNAME"
          echo "::set-output name=password::$PASSWORD"
        env:
          DOCKER_JSON_SECRET: ${{ secrets.LOGIN_CREDENTIAL }}
      - name: check username-password\
        run: |
          echo "${{steps.extract-credentials.outputs.username}}"
          echo "${{ steps.extract-credentials.outputs.password }}"

      # - name: Log in to Docker Hub
      #   run: echo "${{ steps.extract-credentials.outputs.username }}" | docker login -u "${{ steps.extract-credentials.outputs.username }}" --password-stdin
      #   env:
      #     USERNAME: ${{ steps.extract-credentials.outputs.username }}
      #     PASSWORD: ${{ steps.extract-credentials.outputs.password }}
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ steps.extract-credentials.outputs.username }}
          password: ${{ steps.extract-credentials.outputs.password }}
        
      - name: Build Docker image
        run: docker build -t harshp0207/test-image .

      - name: Push Docker image
        run: docker push harshp0207/test-image

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Google Cloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: pub-sub-416205
          export_default_credentials: true

      - name: Publish message to Pub/Sub
        run: |
          gcloud pubsub topics publish Docker_registory --message='{"branch":"main","commit":"${{ github.sha }}"}'
